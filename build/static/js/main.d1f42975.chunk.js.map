{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareasContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/SideBar.js","components/layout/Barra.js","components/tareas/FormTareas.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","context/proyectoReducer.js","types/index.js","config/axios.js","context/ProyectoState.js","context/tareas/tareasReducer.js","context/tareas/tareasState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","autenticado","mensaje","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","guardarUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","nuevoProyecto","guardarNuevoProyecto","onClick","TareasContext","Proyecto","proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","map","key","SideBar","Barra","usuarioAutenticado","cerrarSesion","FormTareas","tareaContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","guardarTarea","tarea","Tarea","fragRef","useRef","eliminarTarea","obtenerTareaActual","cambiarEstado","estado","ref","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","shortid","generate","Proyectos","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareasState","TareasReducer","console","log","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","authReducer","datos","respuesta","response","RutaPrivada","Component","component","render","require","config","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d1f42975.chunk.js","sourcesContent":["import {createContext}from 'react'\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;","import {createContext} from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React,{useState,useContext,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Login = (props)=>{\r\n    const alertaContext = useContext(AlertaContext);\r\n\r\n    const {alerta,mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {autenticado,mensaje,iniciarSesion} = authContext;\r\n\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos');\r\n\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria)\r\n        }\r\n        //eslint-disable-next-line\r\n    },[autenticado,mensaje,props.history])\r\n\r\n    const[usuario,guardarUsuario] = useState({\r\n        email:'',\r\n        password:''\r\n    })\r\n\r\n   const {email,password} = usuario\r\n\r\n\r\n    const onChange = (e)=>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]:e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault()\r\n\r\n        if(email.trim()===''||password.trim()===''){\r\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error');\r\n            return\r\n        }\r\n        iniciarSesion({email,password});\r\n\r\n\r\n    }\r\n    return(\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n            {alerta ?(<div className={`$alerta ${alerta.categoria}`}>{alerta.msg}</div>):null}\r\n                <h1>Iniciar Sesión</h1>\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Inserta tu email\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Contraseña:</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Inserta tu password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-block\"\r\n                        value=\"Iniciar Sesión\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link to={'./nueva-cuenta'} className=\"enlace-cuenta\">\r\n                        Obtener Cuenta\r\n                    </Link>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React,{useState,useContext,useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\nconst NuevaCuenta = (props)=>{\r\n\r\n    const alertaContext = useContext(AlertaContext);\r\n\r\n    const {alerta,mostrarAlerta} = alertaContext;\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {autenticado,mensaje,registrarUsuario} = authContext;\r\n\r\n    useEffect(()=>{\r\n        if(autenticado){\r\n            props.history.push('/proyectos');\r\n\r\n        }\r\n        if(mensaje){\r\n            mostrarAlerta(mensaje.msg,mensaje.categoria)\r\n        }\r\n        //eslint-disable-next-line\r\n    },[autenticado,mensaje,props.history])\r\n\r\n    const[usuario,guardarUsuario] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        password:'',\r\n        confirmar:''\r\n    })\r\n\r\n   const {nombre,email,password,confirmar} = usuario\r\n\r\n\r\n    const onChange = (e)=>{\r\n        guardarUsuario({\r\n            ...usuario,\r\n            [e.target.name]:e.target.value\r\n\r\n        })\r\n    }\r\n\r\n    const onSubmit = e =>{\r\n        e.preventDefault()\r\n\r\n        if(nombre.trim() ===''|| email.trim() ===''|| password.trim() ===''|| confirmar.trim() ===''){\r\n            mostrarAlerta('Todos los campos son obligatorios','alerta-error');\r\n            return\r\n        }\r\n        if(password.length < 6){\r\n            mostrarAlerta('El password debe de ser de al menos 6 caracteres','alerta-error');\r\n            return\r\n        }\r\n        if(password !== confirmar){\r\n            mostrarAlerta('El password y la confirmacion no son iguales','alerta-error');\r\n            return\r\n        }\r\n        //pasar al action\r\n        registrarUsuario({\r\n            nombre,\r\n            email,\r\n            password\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"form-usuario\">\r\n            <div className=\"contenedor-form sombra-dark\">\r\n            {alerta ?(<div className={`$alerta ${alerta.categoria}`}>{alerta.msg}</div>):null}\r\n                <h1>Crear Cuenta</h1>\r\n                <form onSubmit={onSubmit}>\r\n                <div className=\"campo-form\">\r\n                        <label htmlFor=\"nombre\">Nombre:</label>\r\n                        <input\r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        name=\"nombre\"\r\n                        placeholder=\"Inserta tu Nombre\"\r\n                        value={nombre}\r\n                        onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                        type=\"text\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Inserta tu email\"\r\n                        value={email}\r\n                        onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"password\">Contraseña:</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Inserta tu password\"\r\n                        value={password}\r\n                        onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <label htmlFor=\"confirmar\">Repetir contraseña:</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        id=\"confirmar\"\r\n                        name=\"confirmar\"\r\n                        placeholder=\"repite tu contraseña\"\r\n                        value={confirmar}\r\n                        onChange={onChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"campo-form\">\r\n                        <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primario btn-block\"\r\n                        value=\"Crear Cuenta\"\r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link to={'/'} className=\"enlace-cuenta\">\r\n                        Inicio de Sesión\r\n                    </Link>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NuevaCuenta","import {createContext} from 'react';\r\n\r\nconst proyectoContext = createContext();\r\nexport default proyectoContext;","import React, {Fragment,useState, useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectoContext';\r\n\r\n\r\nconst NuevoProyecto =()=>{\r\n\r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {formulario,errorformulario,mostrarFormulario,agregarProyecto,mostrarError} = proyectosContext;\r\n\r\n\r\n    const[nuevoProyecto,guardarNuevoProyecto] = useState({\r\n        nombre:''\r\n    })\r\n\r\n    const{nombre} = nuevoProyecto\r\n\r\n    const onChangeProyecto = e =>{\r\n        guardarNuevoProyecto({\r\n            ...nuevoProyecto,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const onSubmitProyecto = e =>{\r\n        e.preventDefault();\r\n        if(nombre === ''){\r\n            mostrarError()\r\n            return\r\n        }\r\n        agregarProyecto(nuevoProyecto);\r\n        guardarNuevoProyecto({\r\n            nombre:''\r\n        })\r\n        \r\n    }\r\n\r\n    const handleClick=()=>{\r\n        mostrarFormulario();\r\n    }\r\n    \r\n    return(\r\n        <Fragment>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-primario btn-block\"\r\n                onClick={handleClick}\r\n                >Nuevo Proyecto\r\n            </button>\r\n            {\r\n                formulario ?\r\n                    (\r\n                    <form className=\"formulario-nuevo-proyecto\" onSubmit = {onSubmitProyecto}>\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    placeholder=\"Nombre del Proyecto\"\r\n                    name=\"nombre\"\r\n                    value={nombre}\r\n                    onChange={onChangeProyecto}\r\n                    />\r\n\r\n                    <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primario btn-block\"\r\n                    value=\"Agregar proyecto\"\r\n                    >\r\n                    </input>\r\n\r\n                </form>\r\n                    ) \r\n                \r\n                    : null \r\n            }\r\n            {errorformulario  ? (<p className=\"mensaje error\">El nombre del proyecto es obligatorio</p> ): null}\r\n        </Fragment>\r\n    )\r\n}\r\nexport default NuevoProyecto","import {createContext} from 'react';\r\n\r\nconst TareasContext = createContext();\r\n\r\nexport default TareasContext;","import React,{useContext} from 'react';\r\nimport proyectoContext from '../../context/proyectoContext';\r\nimport TareasContext from '../../context/tareas/tareasContext';\r\n\r\nconst Proyecto = ({proyecto})=>{\r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {proyectoActual} = proyectosContext;\r\n\r\nconst tareaContext = useContext(TareasContext);\r\nconst {obtenerTareas} = tareaContext;\r\n\r\nconst seleccionarProyecto = id=>{\r\n    proyectoActual(id);\r\n    obtenerTareas(id);\r\n\r\n}\r\n\r\n    return(\r\n        <li>\r\n            <button \r\n            type=\"button\"\r\n            className=\"btn btn-blank\"\r\n            onClick={()=>{seleccionarProyecto(proyecto._id)}}\r\n            >\r\n              {proyecto.nombre}  \r\n             </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Proyecto","import React , {useContext,useEffect} from 'react';\r\nimport Proyecto from './Proyecto';\r\nimport proyectoContext from '../../context/proyectoContext';\r\nimport AlertaContext from '../../context/alertas/alertaContext'\r\n\r\nconst ListadoProyectos = ()=>{\r\n\r\nconst proyectosContext = useContext(proyectoContext);\r\nconst {mensaje,proyectos,obtenerProyectos} = proyectosContext;\r\n\r\nconst alertaContext = useContext(AlertaContext);\r\nconst {alerta,mostrarAlerta} = alertaContext\r\n\r\nuseEffect(()=>{\r\n    if(mensaje){\r\n        mostrarAlerta(mensaje.msg, mensaje.categoria)\r\n    }\r\n    obtenerProyectos()\r\n    //eslint-disable-next-line\r\n},[])\r\n\r\nif(proyectos.length ===0){\r\n    return <p>No hay proyectos, crea uno</p>\r\n}\r\n    return(\r\n        <ul className=\"listado-proyectos\">\r\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\r\n            {proyectos.map(proyecto=>\r\n                (\r\n                  <Proyecto\r\n                  key={proyecto._id}\r\n                  proyecto={proyecto}\r\n                  />  \r\n                )\r\n            )}\r\n\r\n        </ul>\r\n    )\r\n}\r\nexport default ListadoProyectos","import React from 'react';\r\nimport NuevoProyecto from '../proyectos/NuevoProyecto'\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos'\r\n\r\nconst SideBar = () =>{\r\n    return(\r\n        <aside>\r\n            <h1>MERN<span>Task</span></h1>\r\n            <NuevoProyecto/>\r\n            <div className=\"proyectos\">\r\n                <h2>Tus Proyectos</h2>\r\n                <ListadoProyectos/>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\nexport default SideBar;","import React,{useContext,useEffect} from 'react';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Barra = ()=>{\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const {usuario,usuarioAutenticado,cerrarSesion}=authContext;\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado()\r\n        //eslint-disable-next-line\r\n    },[])\r\n\r\n    return(\r\n        <header className=\"app-header\">\r\n            {usuario ? (<p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span></p>) : null}\r\n            \r\n\r\n            <nav className=\"nav-principal\">\r\n                <button \r\n                className=\"btn btn-blank cerrar-sesion\"\r\n                onClick={()=>{cerrarSesion()}}\r\n                >\r\n                    Cerrar Sesión\r\n                </button>\r\n                \r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\nexport default Barra","import React, {useContext,useState,useEffect} from 'react';\r\nimport proyectoContext from '../../context/proyectoContext';\r\nimport TareasContext from '../../context/tareas/tareasContext';\r\n\r\nconst FormTareas = ()=>{\r\n\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto} = proyectosContext;\r\n\r\n    const tareaContext = useContext(TareasContext);\r\n    const {tareaseleccionada,errortarea,agregarTarea,validarTarea,obtenerTareas,actualizarTarea} = tareaContext;\r\n\r\n    useEffect(()=>{\r\n        if(tareaseleccionada != null){\r\n            guardarTarea(tareaseleccionada)\r\n        }else{\r\n            guardarTarea({\r\n                nombre:''\r\n            })\r\n        }\r\n    },[tareaseleccionada]);\r\n\r\n\r\n    const [tarea,guardarTarea]=useState({\r\n        nombre:''\r\n    })\r\n\r\n    const {nombre}=tarea\r\n\r\n\r\n    if(!proyecto){\r\n        return null\r\n    }\r\n    \r\n    const [proyectoActual] = proyecto\r\n\r\n    const handleChange=e=>{\r\n        guardarTarea({\r\n            ...tarea,\r\n            [e.target.name]:e.target.value\r\n\r\n        })\r\n    }\r\n\r\n\r\n    const onSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(nombre===''){\r\n            validarTarea();\r\n            return;\r\n        }\r\n\r\n        if(tareaseleccionada ===null){\r\n            tarea.proyecto = proyectoActual._id;\r\n        agregarTarea(tarea);\r\n        }\r\n        else{\r\n            actualizarTarea(tarea)\r\n        }\r\n\r\n        \r\n       \r\n        guardarTarea({\r\n            nombre:''\r\n        })\r\n        obtenerTareas(proyectoActual.id);\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"formulario\">\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                    type=\"text\"\r\n                    className=\"input-text\"\r\n                    name=\"nombre\"\r\n                    placeholder=\"Nombre de la Tarea\"\r\n                    value={nombre}\r\n                    onChange={handleChange}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"contenedor-input\">\r\n                    <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-submit btn-primario btn-block\"\r\n                    value={tareaseleccionada ? \"Editar tarea\" :\"Guardar tarea\"}\r\n                   \r\n                    />\r\n                </div>\r\n\r\n            </form>\r\n            {errortarea ?<p className=\"mansaje error\">El Nombre de la tarea es obligatorio</p> : null}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default FormTareas","import React,{useContext,useRef} from 'react';\r\nimport proyectoContext from '../../context/proyectoContext';\r\nimport TareasContext from '../../context/tareas/tareasContext';\r\n\r\n\r\nconst Tarea = ({tarea})=>{\r\n    const fragRef = useRef(null);\r\n\r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto} = proyectosContext;\r\n\r\n    const tareaContext = useContext(TareasContext);\r\n    const {eliminarTarea,obtenerTareas,actualizarTarea,obtenerTareaActual} = tareaContext;\r\n\r\n    const [proyectoActual] = proyecto\r\n\r\n    const tareaEliminar=id=>{\r\n    \r\n            eliminarTarea(id,proyectoActual._id)\r\n            obtenerTareas(proyectoActual.id)\r\n\r\n        \r\n    }\r\n    const cambiarEstado = tarea=>{\r\n\r\n        if(tarea.estado){\r\n            tarea.estado=false\r\n        }else{\r\n            tarea.estado=true\r\n        }\r\n        actualizarTarea(tarea)\r\n\r\n    }\r\n\r\n    const seleccionarTarea=(tarea)=>{\r\n        obtenerTareaActual(tarea)\r\n    }\r\n\r\n    return(\r\n        <li className=\"tarea sombra transite\" ref={fragRef}>\r\n            <p>{tarea.nombre}</p>\r\n            <div className=\"estado\">\r\n                {tarea.estado ?\r\n                (\r\n                    <button\r\n                    className=\"completo\"\r\n                    type=\"button\"\r\n                    onClick={()=>cambiarEstado(tarea)}\r\n                    >Completo\r\n\r\n                    </button>\r\n                )\r\n                :\r\n                (\r\n                    <button\r\n                    className=\"incompleto\"\r\n                    type=\"button\"\r\n                    onClick={()=>cambiarEstado(tarea)}\r\n                    >Incompleto\r\n\r\n                    </button>\r\n                )\r\n                }\r\n                <div className=\"acciones\">\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primario\"\r\n                    onClick={()=>seleccionarTarea(tarea)}\r\n                    >\r\n                        Editar\r\n                    </button>\r\n\r\n                    <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secundario\"\r\n                    onClick={()=>tareaEliminar(tarea._id)}\r\n                    >\r\n                        Eliminar\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\nexport default Tarea","import React,{Fragment,useContext} from 'react'\r\nimport Tarea from './Tarea';\r\nimport shortid from 'shortid';\r\nimport proyectoContext from '../../context/proyectoContext';\r\nimport TareasContext from '../../context/tareas/tareasContext';\r\n\r\nconst ListadoTareas = ()=>{\r\n\r\n    \r\n    const proyectosContext = useContext(proyectoContext);\r\n    const {proyecto,eliminarProyecto} = proyectosContext;\r\n\r\n    const tareaContext = useContext(TareasContext);\r\n    const {tareasproyecto} = tareaContext;\r\n\r\n    if(!proyecto){\r\n        return <h2>Seleccione un proyecto</h2>\r\n    }\r\n\r\n\r\n    const [proyectoActual] = proyecto\r\n   \r\n\r\n    const onClickEliminar =()=>{\r\n\r\n        eliminarProyecto(proyectoActual._id)\r\n    }\r\n    return(\r\n        <Fragment>\r\n        <h2>Proyecto: {proyectoActual.nombre}</h2>\r\n        <ul className=\"listado-tareas\">\r\n            {tareasproyecto.length===0 ? (<li className=\"tarea\"><p>No hay tareas</p></li>)\r\n            : \r\n                     tareasproyecto.map(tarea=>(\r\n                              <Tarea\r\n                        key={shortid.generate()}\r\n                        tarea={tarea}\r\n                        />\r\n                     )\r\n                     )\r\n                \r\n    \r\n            }\r\n        </ul>\r\n        <button\r\n        type=\"button\"\r\n        className=\"btn btn-eliminar\"\r\n        onClick={onClickEliminar}\r\n        >\r\n            Eliminar Proyecto &times;\r\n        </button>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default ListadoTareas","import React,{useContext,useEffect} from 'react';\r\nimport SideBar from '../layout/SideBar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTareas from '../tareas/FormTareas'\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n//import ListadoProyectos from './ListadoProyectos';\r\n\r\nconst Proyectos = ()=>{\r\n\r\nconst authContext = useContext(AuthContext);\r\nconst {usuarioAutenticado} = authContext;\r\nuseEffect(()=>{\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n},[])\r\n    return(\r\n       <div className=\"contenedor-app\">\r\n           <aside>\r\n                <SideBar/>\r\n           </aside>\r\n           <div className=\"seccion-principal\">\r\n               <Barra/>\r\n                <main>\r\n                    <FormTareas/>\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas/>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Proyectos","import {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO} from '../types'\r\n\r\nexport default (state,action)=>{\r\n    switch(action.type){\r\n        case FORMULARIO_PROYECTO:\r\n            return {\r\n                ...state,\r\n                formulario:true\r\n            }\r\n            case OBTENER_PROYECTOS:\r\n               \r\n                return{\r\n                    ...state,\r\n                    proyectos:action.payload.proyectos\r\n                }\r\n            case AGREGAR_PROYECTO:\r\n                return{\r\n                    ...state,\r\n                    proyectos:[...state.proyectos,action.payload],\r\n                    formulario:false,\r\n                    errorformulario:false\r\n                }\r\n                case VALIDAR_FORMULARIO:\r\n                    return{\r\n                        ...state,\r\n                        errorformulario:true\r\n                    }\r\n                case PROYECTO_ACTUAL:\r\n                        return{\r\n                            ...state,\r\n                            proyecto:state.proyectos.filter(proyecto=>proyecto._id === action.payload)\r\n                        }\r\n                    \r\n                case PROYECTO_ERROR:\r\n                    return{\r\n                        ...state,\r\n                        mensaje:action.payload\r\n                    }\r\n                case ELIMINAR_PROYECTO:\r\n                    return{\r\n                        ...state,\r\n                        proyectos:state.proyectos.filter(proyecto=>proyecto._id !==action.payload),\r\n                        proyecto:null\r\n                    }\r\n        default:\r\n            return state\r\n    }\r\n}","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const ESTADO_TAREA = 'ESTADO_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA='ACTUALIZAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';\r\n\r\n","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL:process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;","import React, { useReducer } from 'react';\r\nimport proyectoContext from './proyectoContext';\r\nimport proyectoReducer from './proyectoReducer';\r\nimport clienteAxios from '../config/axios'\r\n\r\nimport {\r\n    FORMULARIO_PROYECTO,\r\n    OBTENER_PROYECTOS,\r\n    AGREGAR_PROYECTO,\r\n    PROYECTO_ERROR,\r\n    VALIDAR_FORMULARIO,\r\n    PROYECTO_ACTUAL,\r\n    ELIMINAR_PROYECTO\r\n} from '../types';\r\n\r\n\r\n\r\n\r\nconst ProyectoState = props=>{\r\n\r\n    const initialState = {\r\n        proyectos:[],\r\n        formulario:false,\r\n        errorformulario:false,\r\n        proyecto:null,\r\n        mensaje:null\r\n    }\r\n\r\n    const [state,dispatch] = useReducer(proyectoReducer,initialState);\r\n\r\n    const mostrarFormulario=()=>{\r\n        dispatch({\r\n            type:FORMULARIO_PROYECTO\r\n        })\r\n    }\r\n\r\n    const obtenerProyectos =async ()=>{\r\n\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/proyectos');\r\n            dispatch({\r\n            type:OBTENER_PROYECTOS,\r\n            payload:resultado.data\r\n        })\r\n        } catch (error) {\r\n\r\n            const alerta = {\r\n                msg:'Hubo un error',\r\n                categoria:'alerta-error'\r\n            }\r\n             dispatch({\r\n                 type:PROYECTO_ERROR,\r\n                 payload:alerta\r\n             })\r\n         }\r\n        \r\n    }\r\n\r\n    const agregarProyecto = async proyecto=>{\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/proyectos',proyecto);\r\n            dispatch({\r\n                type:AGREGAR_PROYECTO,\r\n                payload:resultado.data\r\n            })\r\n        } catch (error) {\r\n\r\n            const alerta = {\r\n                msg:'Hubo un error',\r\n                categoria:'alerta-error'\r\n            }\r\n             dispatch({\r\n                 type:PROYECTO_ERROR,\r\n                 payload:alerta\r\n             })\r\n         }\r\n        \r\n    }\r\n\r\n    const mostrarError = ()=>{\r\n        dispatch({\r\n            type:VALIDAR_FORMULARIO\r\n        })\r\n    }\r\n\r\n    const proyectoActual = proyectoId =>{\r\n        dispatch({\r\n            type: PROYECTO_ACTUAL,\r\n            payload:proyectoId\r\n        })\r\n    }\r\n\r\n    const eliminarProyecto = async proyectoId =>{\r\n\r\n        try {\r\n            await clienteAxios.delete(`api/proyectos/${proyectoId}`);\r\n            dispatch({\r\n                type:ELIMINAR_PROYECTO,\r\n                payload:proyectoId\r\n            })\r\n        } catch (error) {\r\n\r\n           const alerta = {\r\n               msg:'Hubo un error',\r\n               categoria:'alerta-error'\r\n           }\r\n            dispatch({\r\n                type:PROYECTO_ERROR,\r\n                payload:alerta\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    return(\r\n        <proyectoContext.Provider\r\n            value={{\r\n                proyectos:state.proyectos,\r\n                formulario:state.formulario,\r\n                errorformulario:state.errorformulario,\r\n                proyecto:state.proyecto,\r\n                mensaje:state.mensaje,\r\n                mostrarFormulario,\r\n                obtenerProyectos,\r\n                agregarProyecto,\r\n                mostrarError,\r\n                proyectoActual,\r\n                eliminarProyecto\r\n            }}\r\n            >\r\n                {props.children}\r\n        </proyectoContext.Provider>\r\n    )\r\n\r\n}\r\nexport default ProyectoState","import {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA\r\n} from '../../types';\r\n\r\nexport default(state,action)=>{\r\n    switch(action.type){\r\n\r\n        case TAREAS_PROYECTO:\r\n        return{\r\n            ...state,\r\n            tareasproyecto:action.payload\r\n        }\r\n\r\n        case AGREGAR_TAREA:\r\n            return{\r\n                ...state,\r\n                tareasproyecto:[action.payload,...state.tareasproyecto],\r\n                errortarea:false\r\n            }\r\n\r\n            case VALIDAR_TAREA:\r\n                return{\r\n                    ...state,\r\n                    errortarea:true\r\n                }\r\n\r\n            case ELIMINAR_TAREA:\r\n                return{\r\n                    ...state,\r\n                    tareasproyecto:[...state.tareasproyecto.filter(tarea=>tarea._id !==action.payload)]\r\n                }\r\n            \r\n            case ACTUALIZAR_TAREA:\r\n                return{\r\n                    ...state,\r\n                    tareasproyecto:state.tareasproyecto.map(tarea=>tarea._id===action.payload._id ? action.payload : tarea)\r\n                    \r\n                }\r\n            case TAREA_ACTUAL:\r\n                return{\r\n                    ...state,\r\n                    tareaseleccionada:action.payload\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import React,{useReducer} from 'react';\r\n\r\nimport TareasContext from './tareasContext';\r\nimport TareasReducer from './tareasReducer';\r\n\r\nimport {\r\n    TAREAS_PROYECTO,\r\n    AGREGAR_TAREA,\r\n    VALIDAR_TAREA,\r\n    ELIMINAR_TAREA,\r\n    TAREA_ACTUAL,\r\n    ACTUALIZAR_TAREA\r\n} from '../../types';\r\nimport clienteAxios from '../../config/axios';\r\n\r\nconst TareasState = props=>{\r\n    const initialState = {\r\n        tareasproyecto:[],\r\n        errortarea:false,\r\n        tareaseleccionada:null\r\n    }\r\n    const [state,dispatch] = useReducer(TareasReducer,initialState);\r\n\r\n    const obtenerTareas = async proyecto=>{\r\n        console.log(proyecto)\r\n        try {\r\n            const resultado = await clienteAxios.get('/api/tareas',{params:{proyecto}});\r\n            console.log(resultado);\r\n            dispatch({\r\n                type:TAREAS_PROYECTO,\r\n                payload: resultado.data.tareas \r\n            })\r\n        } catch (error) {   \r\n\r\n            console.log(error)\r\n            \r\n        }\r\n    }\r\n\r\n    const agregarTarea = async tarea=>{\r\n        console.log(tarea)\r\n        try {\r\n            const resultado = await clienteAxios.post('/api/tareas',tarea);\r\n            console.log(resultado);\r\n            dispatch({\r\n                type:AGREGAR_TAREA,\r\n                payload:tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const validarTarea = ()=>{\r\n        dispatch({\r\n            type:VALIDAR_TAREA\r\n        })\r\n    }\r\n\r\n    const eliminarTarea =async (id,proyecto)=>{\r\n       try {\r\n           await clienteAxios.delete(`api/tareas/${id}`,{params:{proyecto}});\r\n           dispatch({\r\n            type:ELIMINAR_TAREA,\r\n            payload:id\r\n        })\r\n       } catch (error) {\r\n           console.log(error.resultado)\r\n       }\r\n    }\r\n    const actualizarTarea = async tarea=>{\r\n        try {\r\n\r\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\r\n            console.log(resultado)\r\n            dispatch({\r\n                type:ACTUALIZAR_TAREA,\r\n                payload:resultado.data.tarea\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    const obtenerTareaActual = tarea=>{\r\n        dispatch({\r\n            type:TAREA_ACTUAL,\r\n            payload:tarea\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    return(\r\n        <TareasContext.Provider\r\n        value={{\r\n            tareasproyecto:state.tareasproyecto,\r\n            errortarea:state.errortarea,\r\n            tareaseleccionada:state.tareaseleccionada,\r\n            obtenerTareas,\r\n            agregarTarea,\r\n            validarTarea,\r\n            eliminarTarea,\r\n            obtenerTareaActual,\r\n            actualizarTarea\r\n        }}\r\n        >\r\n            {props.children}\r\n        </TareasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TareasState;","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types';\r\n\r\nexport default(state,action)=>{\r\n    switch(action.type){\r\n\r\n        case MOSTRAR_ALERTA:\r\n            return{\r\n                alerta:action.payload\r\n        }\r\n        case OCULTAR_ALERTA:\r\n            return{\r\n                alerta:null\r\n        }\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}","import React,{useReducer} from 'react';\r\nimport alertaReducer from './alertaReducer';\r\nimport alertaContext from './alertaContext';\r\n\r\nimport {MOSTRAR_ALERTA,\r\nOCULTAR_ALERTA} from '../../types';\r\n\r\nconst AlertaState = props=>{\r\n\r\nconst initialState = {\r\n    alerta:null\r\n}\r\nconst [state,dispatch] = useReducer(alertaReducer,initialState);\r\n\r\nconst mostrarAlerta =(msg,categoria)=>{\r\n    dispatch({\r\n        type:MOSTRAR_ALERTA,\r\n        payload:{\r\n            msg,\r\n            categoria\r\n        }\r\n    });\r\n\r\n    setTimeout(()=>{\r\n        dispatch({\r\n            type:OCULTAR_ALERTA\r\n        })\r\n    },5000)\r\n}\r\n\r\nreturn(\r\n<alertaContext.Provider\r\nvalue={{\r\n    alerta:state.alerta,\r\n    mostrarAlerta\r\n}}\r\n>\r\n{props.children}\r\n</alertaContext.Provider>\r\n)\r\n}\r\n\r\nexport default AlertaState;","import {\r\nREGISTRO_EXITOSO,\r\nREGISTRO_ERROR,\r\nOBTENER_USUARIO,\r\nLOGIN_EXITOSO,\r\nLOGIN_ERROR,\r\nCERRAR_SESION\r\n}from '../../types';\r\n\r\nexport default(state,action)=>{\r\n    switch(action.type){\r\n\r\n        case LOGIN_EXITOSO:\r\n        case REGISTRO_EXITOSO:\r\n            localStorage.setItem('token',action.payload.token)\r\n            return{\r\n               ...state,\r\n               autenticado:true,\r\n               cargando:false,\r\n               mensaje:null\r\n        }\r\n        case CERRAR_SESION:\r\n        case LOGIN_ERROR:\r\n        case REGISTRO_ERROR:\r\n            localStorage.removeItem('token')\r\n            return{\r\n             ...state,\r\n             usuario:null,\r\n             cargando:false,\r\n             autenticado:null,\r\n             token:null,\r\n             mensaje:action.payload\r\n\r\n        }\r\n        case OBTENER_USUARIO:\r\n            return{\r\n                ...state,\r\n                autenticado:true,\r\n                cargando:false,\r\n                usuario:action.payload.usuario\r\n            }\r\n        \r\n        default:\r\n            return state\r\n        \r\n    }\r\n}","import clienteAxios from './axios';\r\n\r\nconst tokenAuth =token=>{\r\n    if(token){\r\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\r\n    }else{\r\n        delete clienteAxios.defaults.headers.common['x-auth-token']\r\n    }\r\n}\r\n\r\nexport default tokenAuth","import React,{useReducer} from 'react';\r\nimport authReducer from './authReducer';\r\nimport authContext from './authContext';\r\nimport clienteAxios from '../../config/axios';\r\nimport tokenAuth from '../../config/token';\r\nimport {\r\n    REGISTRO_EXITOSO,\r\n    REGISTRO_ERROR,\r\n    OBTENER_USUARIO,\r\n    LOGIN_EXITOSO,\r\n    LOGIN_ERROR,\r\n    CERRAR_SESION\r\n    }from '../../types';\r\n\r\n\r\n\r\n\r\n    const AuthState = props=>{\r\n\r\n        const initialState = {\r\n            token:localStorage.getItem('token'),\r\n            autenticado:null,\r\n            usuario:null,\r\n            mensaje:null,\r\n            cargando:true\r\n        }\r\n\r\n\r\n\r\n        const [state,dispatch] = useReducer(authReducer,initialState);\r\n\r\n        const registrarUsuario =async datos=>{\r\n            try {\r\n                const respuesta = await clienteAxios.post('/api/usuarios',datos);\r\n                console.log(respuesta);\r\n                dispatch({\r\n                    type:REGISTRO_EXITOSO,\r\n                    payload:respuesta.data\r\n                });\r\n\r\n                usuarioAutenticado()\r\n            } catch (error) {\r\n\r\n                console.log(error);\r\n                const alerta={\r\n                    msg:error.response.data.msg,\r\n                        categoria:'alerta-error'\r\n                }\r\n                dispatch({\r\n                    type:REGISTRO_ERROR,\r\n                    payload:alerta\r\n                })\r\n            }\r\n        }\r\n\r\n        //retornar usuario autenticado\r\n\r\n        const usuarioAutenticado = async()=>{\r\n            const token = localStorage.getItem('token');\r\n            if(token){\r\n                tokenAuth(token)\r\n            }\r\n            try {\r\n\r\n                const respuesta = await clienteAxios.get('/api/auth');\r\n               // console.log(respuesta.data)\r\n               dispatch({\r\n                   type:OBTENER_USUARIO,\r\n                   payload:respuesta.data\r\n               })\r\n                \r\n            } catch (error) {\r\n                console.log(error.response);\r\n                dispatch({\r\n                    type:LOGIN_ERROR\r\n                })\r\n                \r\n            }\r\n        }\r\n\r\n        //Iniciar sesion\r\n\r\n        const iniciarSesion = async datos=>{\r\n            try{\r\n                const respuesta = await clienteAxios.post('/api/auth',datos);\r\n                dispatch({\r\n                    type:LOGIN_EXITOSO,\r\n                    payload:respuesta.data\r\n                });\r\n                usuarioAutenticado();\r\n                \r\n            }catch(error){\r\n                console.log(error.response.data.msg);\r\n                const alerta={\r\n                    msg:error.response.data.msg,\r\n                        categoria:'alerta-error'\r\n                }\r\n                dispatch({\r\n                    type:LOGIN_ERROR,\r\n                    payload:alerta\r\n                });\r\n            }\r\n        }\r\n\r\n        const cerrarSesion = ()=>{\r\n            dispatch({\r\n                type:CERRAR_SESION\r\n            })\r\n        }\r\n\r\n        return(\r\n            <authContext.Provider\r\n            value={{\r\n                token:state.token,\r\n                autenticado:state.autenticado,\r\n                usuario:state.usuario,\r\n                mensaje:state.mensaje,\r\n                cargando:state.cargando,\r\n                registrarUsuario,\r\n                iniciarSesion,\r\n                usuarioAutenticado,\r\n                cerrarSesion\r\n            }}\r\n            >\r\n                {props.children}\r\n            </authContext.Provider>\r\n        )\r\n    }\r\n    export default AuthState;","import React,{useContext,useEffect} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\n\r\nconst RutaPrivada = ({component:Component,...props})=>{\r\n    const authContext = useContext(AuthContext);\r\n    const{autenticado,usuarioAutenticado,cargando}=authContext;\r\n\r\n    useEffect(()=>{\r\n        usuarioAutenticado()\r\n        //eslint-disable-next-line\r\n    },[])\r\n\r\n    return( \r\n    <Route \r\n    {...props} \r\n    render={ props=>!autenticado && !cargando ? (<Redirect to='/'/>) : (<Component {...props}/>\r\n    )}\r\n    />\r\n)\r\n       \r\n}\r\n\r\nexport default RutaPrivada","import React from 'react';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'; \nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport ProyectoState from './context/ProyectoState';\nimport TareasState from './context/tareas/tareasState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/token';\nimport RutaPrivada from './components/rutas/RutaPrivada';\nrequire('dotenv').config();\nfunction App() {\n\n  const token = localStorage.getItem('token');\n  if(token){\n    tokenAuth(token)\n  }\n\n \n  return (\n    \n    <ProyectoState>\n      <TareasState>\n        <AlertaState>\n          <AuthState>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login} key={1}/>\n          <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} key={2}/>\n          <RutaPrivada exact path=\"/proyectos\" component={Proyectos} key={3}/>\n        </Switch>\n      </Router>\n      </AuthState>\n      </AlertaState>\n      </TareasState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}